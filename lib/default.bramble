load("github.com/maxmcd/bramble/lib/std")


def cacerts():
    return derivation(
        name="ca-certificates",
        builder=busybox().out + "/bin/sh",
        env=dict(
            PATH=busybox().out + "/bin",
            src=std.fetch_url("https://brmbl.s3.amazonaws.com/ca-certificates.crt"),
        ),
        args=[
            "-c",
            """
            set -ex
            cp -r $src/ca-certificates.crt $out
            cp $out/ca-certificates.crt $out/ca-bundle.crt
            """,
        ],
    )


def git():
    b = std.fetch_url("http://s.minos.io/archive/bifrost/x86_64/git-2.10.2-1.tar.gz")
    return derivation(
        name="git",
        builder=busybox().out + "/bin/sh",
        env=dict(src=b, PATH=busybox().out + "/bin"),
        args=[
            "-c",
            """
            set -ex
            cp -r $src/usr/* $out
            mkdir test
            cd test
            $out/bin/git --version
            """,
        ],
    )


def git_fetcher():
    return derivation(
        name="git_fetcher",
        builder=busybox().out + "/bin/sh",
        args=["-c", ""],  # noop
        env=dict(
            git=git(),
            PATH=git().out + "/bin",
            GIT_EXEC_PATH=git().out + "/libexec/git-core",
            GIT_SSL_CAINFO=cacerts().out + "/ca-certificates.crt",
        ),
    )


def git_test():
    return derivation(
        "git-test",
        "fetch_git",
        env=dict(url="https://github.com/maxmcd/bramble.git", cachebust=1),
    )


def zig():
    b = std.fetch_url(
        "https://ziglang.org/builds/zig-linux-x86_64-0.9.0-dev.946+6237dc0ab.tar.xz"
    )
    return derivation(
        name="zig",
        builder=busybox().out + "/bin/sh",
        env=dict(src=b, PATH=busybox().out + "/bin"),
        args=[
            "-c",
            """
            set -ex
            cp -r $src/zig-linux-x86_64-0.9.0-dev.946+6237dc0ab/* $out
            ls -lah $out/
            #$out/zig init-lib
            mkdir $out/bin
            cd $out/bin
            ln -s ../zig ./zig
            """,
        ],
    )


def busybox():
    b = std.fetch_url("https://brmbl.s3.amazonaws.com/busybox-x86_64.tar.gz")
    script = """
    set -e
    $busybox_download/busybox-x86_64 mkdir $out/bin
    $busybox_download/busybox-x86_64 cp $busybox_download/busybox-x86_64 $out/bin/busybox
    cd $out/bin
    for command in $(./busybox --list); do
        ./busybox ln -s busybox $command
    done
    """

    return derivation(
        name="busybox",
        builder=b.out + "/busybox-x86_64",
        args=["sh", "-c", script],
        env={"busybox_download": b, "PATH": b.out},
    )
